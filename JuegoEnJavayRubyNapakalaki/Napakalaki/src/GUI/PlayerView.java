/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CardDealer;
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import NapakalakiGame.Treasure;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author nen155
 */
public class PlayerView extends javax.swing.JPanel {
    private Player playerModel;
    private Napakalaki napakalakiModel;

    public void setNapakalaki(Napakalaki napakalakiModel) {
        this.napakalakiModel = napakalakiModel;
    }
    
    public ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
    // Se recorren los tesoros que contiene el panel,
    //    almacenando en un vector aquellos que est√°n seleccionados.
    //    Finalmente se devuelve dicho vector.
   
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
                output.add ( tv.getTreasure() );
        }
        return output;
    }

    
    /**
     * Creates new form PlayerView
     */
    public void setPlayer(Player p){
        playerModel = p;
        nombreJugador.setText(playerModel.getName());
        nivelJugador.setText(Integer.toString(playerModel.getLevels()));
        muertoJugador.setText(Boolean.toString(playerModel.isDead()));
       fillTreasurePanel (visibleTreasures, playerModel.getVisibleTreasures()); 
       fillTreasurePanel (hiddenTreasures, playerModel.getHiddenTreasures()); 
       
       cultistView1.setCultist(p);
       
       repaint();
       revalidate();

    }
    public void fillTreasurePanel(JPanel aPanel, ArrayList<Treasure> aList){
        //Se elimina la informacion antigua
        aPanel.removeAll();
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t); 
            aTreasureView.setVisible (true); 
            aPanel.add (aTreasureView); 
        }
        aPanel.repaint(); 
        aPanel.revalidate();
        repaint();
        revalidate();
    }
    public PlayerView() {
        initComponents();
        habilitarDescarte(false);
    }
    public void habilitaIn(boolean a){
        intercambiar.setEnabled(a);
    }
    public void habilitarDescarte(boolean a){
        discardTreasures.setEnabled(a);
    }
    public void habilitarBuy(boolean a){
        buyLevels.setEnabled(a);
        setPlayer (napakalakiModel.getCurrentPlayer());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombreJugador = new javax.swing.JLabel();
        nivelJugador = new javax.swing.JLabel();
        muertoJugador = new javax.swing.JLabel();
        buyLevels = new javax.swing.JButton();
        makeVisible = new javax.swing.JButton();
        discardTreasures = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        visibleTreasures = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hiddenTreasures = new javax.swing.JPanel();
        cultistView1 = new GUI.CultistView();
        intercambiar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Jugador");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Nivel:");

        jLabel4.setText("Muerto:");

        buyLevels.setText("Buy Levels");
        buyLevels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyLevelsActionPerformed(evt);
            }
        });

        makeVisible.setText("Make Visible");
        makeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeVisibleActionPerformed(evt);
            }
        });

        discardTreasures.setText("Discard Treasures");
        discardTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardTreasuresActionPerformed(evt);
            }
        });

        visibleTreasures.setBorder(javax.swing.BorderFactory.createTitledBorder("Visible Treasures"));
        jScrollPane1.setViewportView(visibleTreasures);

        hiddenTreasures.setBorder(javax.swing.BorderFactory.createTitledBorder("Hidden Treasures"));
        jScrollPane2.setViewportView(hiddenTreasures);

        intercambiar.setText("Intercambiar");
        intercambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intercambiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(discardTreasures)
                        .addGap(98, 98, 98)
                        .addComponent(makeVisible)
                        .addGap(115, 115, 115)
                        .addComponent(buyLevels))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(138, 138, 138)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(muertoJugador)
                                        .addComponent(nivelJugador)
                                        .addComponent(nombreJugador))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(intercambiar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cultistView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nombreJugador))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nivelJugador))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(muertoJugador)
                            .addComponent(intercambiar)))
                    .addComponent(cultistView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeVisible)
                    .addComponent(discardTreasures)
                    .addComponent(buyLevels))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeVisibleActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
        napakalakiModel.makeTreasuresVisible (selHidden);
        setPlayer (napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_makeVisibleActionPerformed

    private void discardTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardTreasuresActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
         ArrayList<Treasure> selVisible = getSelectedTreasures (visibleTreasures);
         if(selHidden==null)
              selHidden = new ArrayList();
         if(selVisible==null)
              selVisible = new ArrayList();
        napakalakiModel.discardHiddenTreasures(selHidden);
        napakalakiModel.discardVisibleTreasures(selVisible);
       setPlayer (napakalakiModel.getCurrentPlayer());
       repaint();
    }//GEN-LAST:event_discardTreasuresActionPerformed

    private void buyLevelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyLevelsActionPerformed
         ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
         ArrayList<Treasure> selVisible = getSelectedTreasures (visibleTreasures);
         if(selHidden==null)
              selHidden = new ArrayList();
         if(selVisible==null)
              selVisible = new ArrayList();
        napakalakiModel.buyLevels(selVisible, selHidden);
        setPlayer (napakalakiModel.getCurrentPlayer());
        repaint();
    }//GEN-LAST:event_buyLevelsActionPerformed
///EXAMEN
    private void intercambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intercambiarActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
        if(selHidden.size()==1){
            napakalakiModel.discardHiddenTreasures(selHidden);
            CardDealer d = CardDealer.getInstance();
            napakalakiModel.getCurrentPlayer().getHiddenTreasures().add(d.nextTreasure());
                if(napakalakiModel.getCurrentPlayer().getClass().getName() == "CultistPlayer"){
                    ArrayList<Treasure> n = new ArrayList();
                    n.add(d.nextTreasure());
                    napakalakiModel.makeTreasuresVisible(n);
                }
             setPlayer (napakalakiModel.getCurrentPlayer());
        }
    }//GEN-LAST:event_intercambiarActionPerformed
///FIN EXAMEN

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyLevels;
    private GUI.CultistView cultistView1;
    private javax.swing.JButton discardTreasures;
    private javax.swing.JPanel hiddenTreasures;
    private javax.swing.JButton intercambiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton makeVisible;
    private javax.swing.JLabel muertoJugador;
    private javax.swing.JLabel nivelJugador;
    private javax.swing.JLabel nombreJugador;
    private javax.swing.JPanel visibleTreasures;
    // End of variables declaration//GEN-END:variables
}
